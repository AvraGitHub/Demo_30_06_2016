*&---------------------------------------------------------------------*
*& Report  ZDTP_MASSDOWNLOAD_AVRA
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZDTP_MASSDOWNLOAD_AVRA.

*----------------------------------------------------------------------------------------------------------------------
*  SAP Tables
*----------------------------------------------------------------------------------------------------------------------
tables: trdir, seoclass, tfdir, enlfdir, dd02l, tadiv.
type-pools: abap, seor.

*----------------------------------------------------------------------------------------------------------------------
*  Types
*----------------------------------------------------------------------------------------------------------------------
* text element structure
types: tTextTable like textpool.
* GUI titles
types: tGUITitle like d347t.

* Message classes
types: begin of tMessage,
         arbgb like t100-arbgb,
         stext like t100a-stext,
         msgnr like t100-msgnr,
         text  like t100-text,
       end of tMessage.

* Screen flow.
types: begin of tScreenFlow,
         screen like d020s-dnum,
         code like d022s-line,
       end of tScreenFlow.

* Holds a tabledefinition
types: begin of tDictTableStructure,
         fieldname like dd03l-fieldname,
         position  like dd03l-position,
         keyflag   like dd03l-keyflag,
         rollname  like dd03l-rollname,
         domname   like dd03l-domname,
         datatype  like dd03l-datatype,
         leng      like dd03l-leng,
         lowercase type lowercase,
         ddtext    like dd04t-ddtext,
       end of tdictTableStructure.

* Holds a tables attributes + its definition
types: begin of tDictTable,
         tablename    like dd03l-tabname,
         tableTitle   like dd02t-ddtext,
         iStructure type tDictTableStructure occurs 0,
       end of tDictTable.

types: begin of tDictFilename,
         tablename    like dd03l-tabname,
         filename type string,
       end of tDictFilename.

* Include program names
types: begin of tInclude,
         includeName like trdir-name,
         includeTitle like tftit-stext,
       end of tInclude.

* Exception class texts
types: begin of tConcept,
         constName type string,
         concept type sotr_conc,
       end of tConcept.

* Method
types: begin of tMethod,
         cmpName(61),
         descript like vseomethod-descript,
         exposure like vseomethod-exposure,
         methodKey type string,
       end of tMethod.

* Interfaces
types: begin of tInterface,
         interfaceName like vseoclass-clsname,
       end of tInterface.

* Class
types: begin of tClass,
         scanned(1),
         clsname like vseoclass-clsname,
         descript like vseoclass-descript,
         msg_id like vseoclass-msg_id,
         exposure like vseoclass-exposure,
         state like vseoclass-state,
         clsfinal like vseoclass-clsfinal,
         r3release like vseoclass-r3release,
         iMethods type tMethod occurs 0,
         iDictStruct type tDictTable occurs 0,
         iTextElements type tTextTable occurs 0,
         iMessages type tMessage occurs 0,
         iInterfaces type tInterface occurs 0,
         iConcepts type tConcept occurs 0,
         textElementKey type string,
         publicClassKey type string,
         privateClassKey type string,
         protectedClassKey type string,
         typesClassKey type string,
         exceptionClass type abap_bool,
       end of tClass.

* function modules
types: begin of tFunction,
         functionName like tfdir-funcName,
         functionGroup like enlfdir-area,
         includeNumber like tfdir-include,
         functionMainInclude like tfdir-funcName,
         functionTitle like tftit-stext,
         topIncludeName like tfdir-funcName,
         progname like tfdir-pname,
         programLinkName like tfdir-pname,
         messageClass like t100-arbgb,
         iTextElements type tTextTable occurs 0,
         iSelectiontexts type tTextTable occurs 0,
         iMessages type tMessage occurs 0,
         iIncludes type tInclude occurs 0,
         iDictStruct type tDictTable occurs 0,
         iGUITitle type tGUITitle occurs 0,
         iScreenFlow type tScreenFlow occurs 0,
       end of tFunction.

types: begin of tProgram,
         progname like trdir-name,
         programTitle like tftit-stext,
         subc like trdir-subc,
         messageClass like t100-arbgb,
         iMessages type tMessage occurs 0,
         iTextElements type tTextTable occurs 0,
         iSelectiontexts type tTextTable occurs 0,
         iGUITitle type tGUITitle occurs 0,
         iScreenFlow type tScreenFlow occurs 0,
         iIncludes type tInclude occurs 0,
         iDictStruct type tDictTable occurs 0,
       end of tProgram.

*----------------------------------------------------------------------------------------------------------------------
*  Internal tables
*----------------------------------------------------------------------------------------------------------------------
*  Dictionary object
data: iDictionary type standard table of tDictTable with header line.
*  Dictionary objects which have previously been downloaded
data: iDictFilename type standard table of tDictFilename with header line.
* Function modules.
data: iFunctions type standard table of tFunction with header line.
* Function modules used within programs.
data: iProgFunctions type standard table of tFunction with header line.
* Tree display structure.
data: iTreeDisplay type standard table of snodetext with header line.
* Message class data
data: iMessages type standard table of tMessage with header line.
* Holds a single message class an all of its messages
data: iSingleMessageClass type standard table of tMessage with header line.
* Holds program related data
data: iPrograms type standard table of tProgram with header line.
* Classes
data: iClasses type standard table of tClass with header line.
* Table of paths created on the SAP server
data: iServerPaths type standard table of string with header line.

*----------------------------------------------------------------------------------------------------------------------
*  Table prototypes
*----------------------------------------------------------------------------------------------------------------------
data: dumiDictStructure type standard table of tDictTableStructure.
data: dumiTextTab type standard table of tTextTable.
data: dumiIncludes type standard table of tInclude.
data: dumiHtml type standard table of string.
data: dumiHeader type standard table of string .
data: dumiScreen type standard table of tScreenFlow .
data: dumIGUITitle type standard table of tGUITitle.
data: dumiMethods type standard table of tMethod.
data: dumiConcepts type standard table of tConcept.
data: dumiInterfaces type standard table of tInterface.

*----------------------------------------------------------------------------------------------------------------------
*   Global objects
*----------------------------------------------------------------------------------------------------------------------
data: objFile type ref to cl_gui_frontend_services.
data: objRuntimeError type ref to cx_root.

*----------------------------------------------------------------------------------------------------------------------
*  Constants
*----------------------------------------------------------------------------------------------------------------------
constants: VERSIONNO type string value '1.4.4'.
constants: TABLES type string value 'TABLES'.
constants: TABLE type string value 'TABLE'.
constants: LIKE type string value 'LIKE'.
constants: TYPE type string value 'TYPE'.
constants: TYPEREFTO type string value 'TYPE REF TO'.
constants: STRUCTURE type string value 'STRUCTURE'.
constants: LOWSTRUCTURE type string value 'structure'.
constants: OCCURS type string value 'OCCURS'.
constants: FUNCTION type string value 'FUNCTION'.
constants: CALLFUNCTION type string value ' CALL FUNCTION'.
constants: MESSAGE type string  value 'MESSAGE'.
constants: INCLUDE type string value 'INCLUDE'.
constants: LOWINCLUDE type string value 'include'.
constants: DESTINATION type string value 'DESTINATION'.
constants: IS_TABLE type string value 'T'.
constants: IS_PROGRAM type string value 'P'.
constants: IS_SCREEN type string value 'S'.
constants: IS_GUITITLE type string value 'G'.
constants: IS_DOCUMENTATION type string value 'D'.
constants: IS_MESSAGECLASS type string value 'MC'.
constants: IS_FUNCTION type string value 'F'.
constants: IS_CLASS type string value 'C'.
constants: IS_METHOD type string value 'M'.
constants: ASTERIX type string value '*'.
constants: COMMA type string value ','.
constants: PERIOD type string value '.'.
constants: DASH type string value '-'.
constants: TRUE type abap_bool value 'X'.
constants: FALSE type abap_bool value ''.
constants: LT type string value '&lt;'.
constants: GT type string value '&gt;'.
constants: UNIX type string value 'UNIX'.
constants: NON_UNIX type string value 'not UNIX'.
constants: HTMLEXTENSION type string value 'html'.
constants: TEXTEXTENSION type string value 'txt'.
constants: SS_CODE type c value 'C'.
constants: SS_TABLE type c value 'T'.

*----------------------------------------------------------------------------------------------------------------------
*  Global variables
*----------------------------------------------------------------------------------------------------------------------
data: statusBarMessage(100).
data: forcedExit type abap_bool value FALSE.
data: startTime like sy-uzeit.
data: runTime like sy-uzeit.
data: downloadFileExtension type string.
data: downloadFolder type string.
data: serverSlashSeparator type string.
data: frontendSlashSeparator type string.
data: slashSeparatorToUse type string.
data: serverFilesystem type filesys_d.
data: serverFolder type string.
data: frontendOpSystem type string.
data: serverOpSystem type string.
data: customerNameSpace type string.
ranges: soProgramName for trdir-name.
ranges: soAuthor for usr02-bname.
ranges: soTableNames for dd02l-tabname.
ranges: soFunctionName  for tfdir-funcName.
ranges: soClassName for vseoclass-clsname.
ranges: soFunctionGroup for enlfdir-area.
field-symbols: <waDictStruct> type tDictTable.

*----------------------------------------------------------------------------------------------------------------------
*  Selection screen declaration
*----------------------------------------------------------------------------------------------------------------------
* Author
selection-screen: begin of block b1 with frame title tBlock1.
  selection-screen begin of line.
    selection-screen comment 5(23) tAuth.
    parameters: pAuth like usr02-bname memory id MAUTH.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 5(36) tPmod.
    parameters: pMod as checkbox.
  selection-screen end of line.
selection-screen: end of block b1.

selection-screen begin of block b2 with frame title tBlock2.
* Tables
  selection-screen begin of line.
    parameters: rTable radiobutton group r1.
    selection-screen comment 5(15) tRtable.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 10(15) tPtable.
    select-options: soTable for dd02l-tabname.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 10(79) tTnote.
  selection-screen end of line.

* Message classes
  selection-screen begin of line.
    parameters: rMess radiobutton group r1.
    selection-screen comment 5(18) tPMes.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 10(18) tMname.
    parameters: pMname like t100-arbgb memory id MMNAME.
  selection-screen end of line.

* Function modules
  selection-screen begin of line.
    parameters: rFunc radiobutton group r1.
    selection-screen comment 5(30) tRfunc.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 10(15) tPfname.
    select-options: soFname for tfdir-funcName.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 10(15) tFgroup.
    select-options: soFgroup for enlfdir-area.
  selection-screen end of line.

* Classes
  selection-screen begin of line.
    parameters: rClass radiobutton group r1.
    selection-screen comment 5(30) tRClass.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 10(15) tPcName.
    select-options: soClass for seoclass-clsname.
  selection-screen end of line.

* Programs / includes
  selection-screen begin of line.
    parameters: rProg radiobutton group r1 default 'X'.
    selection-screen comment 5(18) tProg.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 10(15) tRpname.
    select-options: soProg for trdir-name.
  selection-screen end of line.

  selection-screen skip.
* Language
  selection-screen begin of line.
    selection-screen comment 1(27) tMLang.
    parameters: pMLang like t100-sprsl default 'EN'.
  selection-screen end of line.

* Package
  selection-screen begin of line.
    selection-screen comment 1(24) tPack.
    select-options: soPack for tadiv-devclass.
  selection-screen end of line.


* Customer objects
  selection-screen begin of line.
    selection-screen comment 1(27) tCust.
    parameters: pCust as checkbox default 'X'.
  selection-screen end of line.

* Alt customer name range
  selection-screen begin of line.
    selection-screen comment 1(27) tNRange.
    parameters: pCName type namespace memory id MNAMESPACE.
  selection-screen end of line.
selection-screen: end of block b2.

* Additional things to download.
selection-screen: begin of block b3 with frame title tBlock3.
  selection-screen begin of line.
    selection-screen comment 1(33) tPtext.
    parameters: pText as checkbox default 'X' memory id MTEXT.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(33) tMess.
    parameters: pMess as checkbox default 'X' memory id MMESS.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(33) tPinc.
    parameters: pInc as checkbox default 'X' memory id MINC.
    selection-screen comment 40(20) tReci.
    parameters: pReci as checkbox default 'X' memory id MRECI.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(33) tPfunc.
    parameters: pFunc as checkbox default 'X' memory id MFUNC.
    selection-screen comment 40(20) tRecf.
    parameters: pRecf as checkbox default 'X' memory id MRECF.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(33) tRecC.
    parameters: pRecC as checkbox default 'X' memory id MRECC.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(33) tFDoc.
    parameters: pFDoc as checkbox default 'X' memory id MFDOC.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(33) tCDoc.
    parameters: pCDoc as checkbox default 'X' memory id MCDOC.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(33) tPscr.
    parameters: pScr as checkbox default 'X' memory id MSCR.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(33) tPdict.
    parameters: pDict as checkbox default 'X' memory id MDICT.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(33) tSortT.
    parameters: pSortT as checkbox default ' ' memory id MSORTT.
  selection-screen end of line.
selection-screen: end of block b3.

* File details
selection-screen: begin of block b4 with frame title tBlock4.
  selection-screen begin of line.
    selection-screen comment 1(20) tPhtml.
    parameters: pHtml radiobutton group g1 default 'X'.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 5(29) tBack.
    parameters: pBack as checkbox default 'X'.
  selection-screen end of line.

  selection-screen begin of line.
    selection-screen comment 1(20) tPtxt.
    parameters: pTxt radiobutton group g1.
  selection-screen end of line.

  selection-screen skip.

* Download to SAP server
  selection-screen begin of line.
    selection-screen comment 1(25) tServ.
    parameters: pServ radiobutton group g2.
  selection-screen end of line.
  selection-screen begin of line.
    selection-screen comment 8(20) tSPath.
    parameters: pLogical like filename-fileintern memory id MLOGICAL.
  selection-screen end of line.
  selection-screen comment /28(60) tSDPath.

* Download to PC
  selection-screen begin of line.
    selection-screen comment 1(25) tPc.
    parameters: pPc radiobutton group g2 default 'X'.
  selection-screen end of line.
  selection-screen begin of line.
    selection-screen comment 8(20) tPpath.
    parameters: pFolder like rlgrap-filename memory id MFOLDER.
  selection-screen end of line.
selection-screen: end of block b4.

* Display options
selection-screen: begin of block b5 with frame title tBlock5.
* Display final report
  selection-screen begin of line.
    selection-screen comment 1(33) tRep.
    parameters: pRep as checkbox default 'X'.
  selection-screen end of line.
* Display progress messages
  selection-screen begin of line.
    selection-screen comment 1(33) tProMess.
    parameters: pProMess as checkbox default 'X'.
  selection-screen end of line.
selection-screen: end of block b5.

*----------------------------------------------------------------------------------------------------------------------
* Display a directory picker window
*----------------------------------------------------------------------------------------------------------------------
at selection-screen on value-request for pFolder.

data: objFile type ref to cl_gui_frontend_services.
data: pickedFolder type string.
data: initialFolder type string.

  if sy-batch is initial.
    create object objFile.

    if not pFolder is initial.
      initialFolder = pFolder.
    else.
      objFile->get_temp_directory( changing temp_dir = initialFolder
                                   exceptions cntl_error = 1
                                             error_no_gui = 2
                                             not_supported_by_gui = 3 ).
    endif.

    objFile->directory_browse( exporting initial_folder = initialFolder
                               changing selected_folder = pickedFolder
                               exceptions cntl_error = 1
                                          error_no_gui = 2
                                          not_supported_by_gui = 3 ).

    if sy-subrc = 0.
      pFolder = pickedFolder.
    else.
      write: / 'An error has occured picking a folder'.
    endif.
  endif.

*----------------------------------------------------------------------------------------------------------------------
at selection-screen.
*----------------------------------------------------------------------------------------------------------------------
  case 'X'.
    when pPc.
      if pFolder is initial.
*       User must enter a path to save to
        message e000(oo) with 'You must enter a file path'.
      endif.

    when pServ.
      if pLogical is initial.
*       User must enter a logical path to save to
        message e000(oo) with 'You must enter a logical file name'.
      endif.
  endcase.

*----------------------------------------------------------------------------------------------------------------------
at selection-screen on pLogical.
*----------------------------------------------------------------------------------------------------------------------
  if not pServ is initial.
    call function 'FILE_GET_NAME' exporting logical_filename = pLogical
                                  importing file_name = serverFolder
                                  exceptions file_not_found = 1
                                             others = 2.
    if sy-subrc = 0.
      if serverFolder is initial.
        message e000(oo) with 'No file path returned from logical filename'.
      else.
*       Path to display on the selection screen
        tSDPath = serverFolder.
*       Remove the trailing slash off the path as the subroutine buildFilename will add an extra one
        shift serverFolder right deleting trailing serverSlashSeparator.
        shift serverFolder left deleting leading space.
      endif.
    else.
      message e000(oo) with 'Logical filename does not exist'.
    endif.
  endif.

* ---------------------------------------------------------------------------------------------------------------------
at selection-screen on value-request for soProg-low.
* ---------------------------------------------------------------------------------------------------------------------
  call function 'REPOSITORY_INFO_SYSTEM_F4' exporting object_type  = 'PROG'
                                                      object_name  = soProg-low
                                                      suppress_selection   = 'X'
                                                      use_alv_grid = ''
                                                      without_personal_list = ''
                                            importing object_name_selected = soProg-low
                                            exceptions cancel = 1.

* ---------------------------------------------------------------------------------------------------------------------
at selection-screen on value-request for soProg-high.
* ---------------------------------------------------------------------------------------------------------------------
  call function 'REPOSITORY_INFO_SYSTEM_F4' exporting object_type  = 'PROG'
                                                      object_name  = soProg-high
                                                      suppress_selection   = 'X'
                                                      use_alv_grid = ''
                                                      without_personal_list = ''
                                            importing object_name_selected = soProg-high
                                            exceptions cancel = 1.


