*&---------------------------------------------------------------------*
*& Report  Z_CALCULATE_DELTA
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_CALCULATE_DELTA.

PARAMETERS: pa_int1 TYPE i, pa_int2 TYPE i, pa_op TYPE c LENGTH 3.
TYPES gty_result TYPE p LENGTH 16 DECIMALS 2.
DATA gv_result TYPE gty_result.

IF ( pa_op = '+' OR
     pa_op = '-' OR
     pa_op = '*' OR
     pa_op = '**' OR
     ( pa_op = '/' AND pa_int2 <> 0 ) OR
     ( pa_op = 'DIV' AND pa_int2 <> 0 ) OR
     ( pa_op = 'MOD' AND pa_int2 <> 0 ) OR
     ( pa_op = '%' AND pa_int2 <> 0 ) ).


   CASE pa_op.
      WHEN '+'.
         gv_result = pa_int1 + pa_int2.
      WHEN '-'.
         gv_result = pa_int1 - pa_int2.
      WHEN '*'.
         gv_result = pa_int1 * pa_int2.
      WHEN '/'.
         gv_result = pa_int1 / pa_int2.
      WHEN '**'.
*         gv_result = pa_int1 ** pa_int2.
         CALL FUNCTION 'ZAG_FM_00_POWER'
            EXPORTING
              IV_BASE = pa_int1
              IV_POWER = pa_int2
            IMPORTING
              EV_RESULT = gv_result
            EXCEPTIONS
              POWER_VALUE_TOO_HIGH = 1
              BASE_VALUE_TOO_HIGH = 2
              RESULT_VALUE_TOO_HIGH = 3.

         CASE sy-subrc.
           WHEN 1.
             WRITE 'Power Value too high'(pvh).
           WHEN 2.
             WRITE 'Base Value too high'(bvh).
           WHEN 3.
             WRITE 'Result Value too high'(rvh).
         ENDCASE.
      WHEN 'DIV'.
         gv_result = pa_int1 DIV pa_int2.
      WHEN 'MOD'.
         gv_result = pa_int1 MOD pa_int2.
      WHEN '%'.
         CALL FUNCTION 'ZAG_FM_00_PERCENTAGE'
            EXPORTING
              IV_MAX = pa_int2
              IV_ACT = pa_int1
            IMPORTING
              EV_PERCENTAGE = gv_result
            EXCEPTIONS
              DIVISION_BY_0 = 1.

         CASE sy-subrc.
           WHEN 1.
             WRITE 'No division by 0'(db0).
         ENDCASE.
   ENDCASE.

   WRITE: 'Result'(res), gv_result.

ELSEIF ( ( pa_op = '/' AND pa_int2 = 0 ) OR
         ( pa_op = 'DIV' AND pa_int2 = 0 ) OR
         ( pa_op = 'MOD' AND pa_int2 = 0 ) OR
         ( pa_op = '%' AND pa_int2 = 0 ) ).
   WRITE 'No division by zero!'(dbz).

ELSE.
   WRITE 'Invalid operator!'(iop).

ENDIF.
