*&---------------------------------------------------------------------*
*& Report  ZSALESORDERARUNAQ
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZSALESORDERARUNAQ.

DATA:
* Order partners
* li_order_partners    TYPE STANDARD TABLE OF bapiparnr,
* l_order_partners     LIKE bapiparnr,

* Structures for order header
* l_order_header_in    LIKE bapisdhd1,
* l_order_header_inx   LIKE bapisdhd1x,
lt_partners      type table of bapiparnr  with header line,
ls_order_header_in     type bapisdhd1 ,
ls_order_header_inx    type bapisdhd1x,

* Tables for order items
 "li_order_items_in    TYPE STANDARD TABLE OF bapisditm,
lt_items_in      type table of bapisditm  with header line,
 lt_items_inx     type table of bapisditmx with header line,

 "li_order_items_inx   TYPE STANDARD TABLE OF bapisditmx,
 "l_order_items_inx    LIKE bapisditmx,

* Return table from bapi call
 "li_return type table of bapiret2   with header line,
 l_return  TYPE bapiret2,
 lt_return        type table of bapiret2   with header line,

* li_ORDER_SCHEDULES_INX TYPE STANDARD TABLE OF  BAPISCHDLX,
* l_ORDER_SCHEDULES_INX LIKE  BAPISCHDLX,
* li_ORDER_SCHEDULES_IN TYPE STANDARD TABLE OF  BAPISCHDL ,
* l_ORDER_SCHEDULES_IN LIKE  BAPISCHDL ,
lt_schedules_in  type table of bapischdl  with header line,
 lt_schedules_inx type table of bapischdlx with header line,

* Sales document number
  l_vbeln LIKE bapivbeln-vbeln,
  RETURN type BAPIRET2,
* Error flag

  l_errflag(1) TYPE c.


*------------------------------------------------------------------
* Build order header
*------------------------------------------------------------------
ls_order_header_in-doc_type   = 'TA'.
        ls_order_header_in-sales_org  = 'AS01'.
        ls_order_header_in-distr_chan = 'AD'.
        ls_order_header_in-division   = 'D1'.
        ls_order_header_in-sales_off  = 'ASSO'.
        "ls_order_header_in-purch_no_c = '10000001'.
        ls_order_header_inx-updateflag = 'I'.
        ls_order_header_inx-doc_type   = 'X'.
        ls_order_header_inx-sales_org  = 'X'.
        ls_order_header_inx-distr_chan = 'X'.
        ls_order_header_inx-division   = 'X'.
        ls_order_header_inx-sales_off  = 'X'.

*------------------------------------------------------------------
* Build partner information
*------------------------------------------------------------------
  lt_partners-partn_role = 'AG'.
  lt_partners-partn_numb = '0000004521'.
  append lt_partners.
*  CLEAR l_order_partners.
*  l_order_partners-partn_role = 'AG'.          "Remember German codes !
*  l_order_partners-partn_numb = '0000004521'."'0000002721'.
*  APPEND l_order_partners TO li_order_partners.


* Update flag
*  ls_order_header_inx-updateflag = 'I'.
*
** Sales document type
*  ls_order_header_in-doc_type    = 'TA'.        "Remember German codes !
*  ls_order_header_inx-doc_type   = 'X'.
*
** Sales organization
*  ls_order_header_in-sales_org  = 'AS01'.
*  ls_order_header_inx-sales_org  = 'X'.
*
** Distribution channel
*
*  ls_order_header_in-distr_chan = 'AD'.
*  ls_order_header_inx-distr_chan = 'X'.
*
** Division
*  ls_order_header_in-division = 'D1'.
*  ls_order_header_inx-division = 'X'.
*
** Incoterms
* ls_order_header_in-INCOTERMS1  = 'CFR'.
* ls_order_header_inx-INCOTERMS1  = 'X'.
*
* ls_order_header_in-INCOTERMS2  = 'Test'.
* ls_order_header_inx-INCOTERMS2  = 'X'.
*
* " Terms of payment
* ls_order_header_in-PMNTTRMS  = '0001'.
* ls_order_header_inx-PMNTTRMS  = 'X'.

* Purchase order
*  l_order_header_in-purch_no_c = 'DG-19970626-300'.
*  l_order_header_inx-purch_no_c = 'X'.


*------------------------------------------------------------------
* Build order item(s) - Only 1 is used in this example
*------------------------------------------------------------------
  lt_items_in-itm_number  = '000010'.
        lt_items_in-material    = 'RACKET'.
        "lt_items_in-sales_unit  = 'ST'.
        lt_items_in-comp_quant = '450'.
        lt_items_inx-comp_quant = 'X'.
        lt_items_in-NET_WEIGHT = '450'.
        lt_items_inx-NET_WEIGHT = 'X'.
        lt_items_in-GROSS_WGHT = '500'.
        lt_items_inx-GROSS_WGHT = 'X'.
        lt_items_in-UNTOF_WGHT = 'KG'.
        lt_items_inx-UNTOF_WGHT = 'X'.
        lt_items_in-VOLUME = '10'.
        lt_items_inx-VOLUME = 'X'.
        lt_items_in-VOLUNIT = 'M3'.
        lt_items_inx-VOLUNIT = 'X'.
        lt_items_in-SHIP_POINT = 'ASSP'.
        lt_items_inx-SHIP_POINT = 'X'.
        lt_items_in-PLANT = 'ASP1'.
        lt_items_inx-PLANT = 'X'.

         append lt_items_in.
         append lt_items_inx.
*  lt_items_in-itm_number = '100'.
*  lt_items_inx-itm_number = '100'.
*
*
*  lt_items_in-material = 'RACKET'.
*  lt_items_inx-material = 'X'.
*
*  lt_items_in-comp_quant = '450'.
*  lt_items_inx-comp_quant = 'X'.
*
*  lt_items_in-NET_WEIGHT = '450'.
*  lt_items_inx-NET_WEIGHT = 'X'.
*  lt_items_in-GROSS_WGHT = '500'.
*  lt_items_inx-GROSS_WGHT = 'X'.
*  lt_items_in-UNTOF_WGHT = 'KG'.
*  lt_items_inx-UNTOF_WGHT = 'X'.
*  lt_items_in-VOLUME = '10'.
*  lt_items_inx-VOLUME = 'X'.
*   lt_items_in-VOLUNIT = 'M3'.
*  lt_items_inx-VOLUNIT = 'X'.
*  lt_items_in-SHIP_POINT = 'ASSP'.
*  lt_items_inx-SHIP_POINT = 'X'.
*  lt_items_in-PLANT = 'ASP1'.
*  lt_items_inx-PLANT = 'X'.
*
*  APPEND lt_items_in." TO li_order_items_in.
*
*  lt_items_inx-updateflag = 'I'.
*  APPEND lt_items_inx." TO li_order_items_inx.

  " dates
*  lt_schedules_in-ITM_NUMBER = '100'.
*  lt_schedules_inX-ITM_NUMBER = 'X'.
*
* lt_SCHEDULES_IN-TP_DATE = '20141231'.
*  lT_SCHEDULES_INX-TP_DATE = 'X'.
*  lT_SCHEDULES_IN-MS_DATE = '20150102'.
*  lT_SCHEDULES_INX-MS_DATE = 'X'.
*  lT_SCHEDULES_IN-LOAD_DATE = '20150104'.
*  lT_SCHEDULES_INX-LOAD_DATE = 'X'.
*  lT_SCHEDULES_IN-GI_DATE = '20150105'.
*  lT_SCHEDULES_INX-GI_DATE = 'X'.
*  lT_SCHEDULES_IN-DLV_DATE = '20150106'.
*  lT_SCHEDULES_INX-DLV_DATE = 'X'.
*
*APPEND lt_schedules_in." TO li_ORDER_SCHEDULES_IN.
*
*  lt_schedules_inX-updateflag = 'I'.
*  APPEND lt_schedules_inX." TO li_ORDER_SCHEDULES_INX.

 lT_SCHEDULES_INX-updateflag = 'I'.

       lt_schedules_in-itm_number  = '000010'.
       lt_schedules_inx-itm_number  = '000010'.
       lt_schedules_in-sched_line  = '0001'.
       lt_schedules_inx-sched_line  = '0001'.
       lt_schedules_in-req_qty     = 1000.
       lt_schedules_inx-req_qty     = 'X'.
*       lt_schedules_in-req_date    = sy-datum.
*       lt_schedules_inx-req_date     = 'X'.
       lt_SCHEDULES_IN-TP_DATE = '20141231'.
       lT_SCHEDULES_INX-TP_DATE = 'X'.
       lT_SCHEDULES_IN-MS_DATE = '20150102'.
       lT_SCHEDULES_INX-MS_DATE = 'X'.
       lT_SCHEDULES_IN-LOAD_DATE = '20150104'.
       lT_SCHEDULES_INX-LOAD_DATE = 'X'.
       lT_SCHEDULES_IN-GI_DATE = '20150105'.
       lT_SCHEDULES_INX-GI_DATE = 'X'.
       lT_SCHEDULES_IN-DLV_DATE = '20150106'.
       lT_SCHEDULES_INX-DLV_DATE = 'X'.

       append lt_schedules_in.
       append lt_schedules_inx.
*------------------------------------------------------------------
* CALL Bapi
*------------------------------------------------------------------

  CALL FUNCTION 'BAPI_SALESORDER_CREATEFROMDAT2'
       EXPORTING
            order_header_in  = ls_order_header_in
            order_header_inx = ls_order_header_inx
            "testrun          = 'X'
       IMPORTING
            salesdocument    = l_vbeln
       TABLES
             return                        = lt_return
            order_items_in                = lt_items_in
            order_items_inx               = lt_items_inx
            order_partners                = lt_partners
            order_schedules_in            = lt_schedules_in
            order_schedules_inx           = lt_schedules_inx.

*------------------------------------------------------------------
* Check and write Return table
*------------------------------------------------------------------




 CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
     EXPORTING
       WAIT          = 'X'.

  LOOP AT lt_return INTO l_return.
    WRITE: / l_return-type, l_return-message(50).
    IF l_return-type = 'E'.
      l_errflag = 'X'.
    ENDIF.
  ENDLOOP.

 WRITE: / 'Sales dcoument: ', l_vbeln.
    " IMPORTING
      " RETURN        = RETURN.

  "if sy-subrc = 0
  "and not salesdoc is initial.
*  IF return-type NA 'EA'.
*    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*     EXPORTING
*       WAIT          = 'X'
*     IMPORTING
*       RETURN        = RETURN.
*   ENDIF.
*------------------------------------------------------------------
* No errors - Commit
*------------------------------------------------------------------

*  IF l_errflag  IS INITIAL.
*    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'.
*  ENDIF.
